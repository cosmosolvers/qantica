import os
import sys
import secrets


PORT = {
    'mysql': 3306,
    'postgresql': 5432,
    'mongodb': 27017,
    'arangodb': 8529,
    'sqlite': ''
}


def init(foldername):
    # verify if the folder exists
    if os.path.exists(foldername):
        print("""
        ========================================
              Folder already exists
        ========================================
        """)
        return
    
    foldername = foldername.lower()
     
    # create the folder
    os.mkdir(foldername)
    os.chdir(foldername)

    # create the README.md file
    with open("README.md", "w") as file:
        file.write(f"""
# {foldername.capitalize()}

A Qantica project

## Created by Qantica

```bash
$ pip install qantica
$ qant create {foldername}
$ cd {foldername}
$ python qmd.py run
```
""")
    
    # create the .gitignore file
    with open(".gitignore", "w") as file:
        file.write("*.pyc\n__pycache__/\n*.pyo\n*.pyd\n.DS_Store\nThumbs.db\n.env\ninstance/\ndist/\nbuild/\n*.egg-info/\n*.egg/\n")
    
    # create qmd.py file
    with open("qmd.py", "w") as file:
        file.write("import os\nimport sys\n\n\n\n")
    
    # create urls.py file
    with open("urls.py", "w") as file:
        file.write("""
from qantica.core import Router

routes = [
    ('/', {'GET': 'index'}),
    ('/about', {'GET': 'about'}),
    ('/contact', {'GET': 'contact'}),
    ('/services', {'GET': 'services'}),
    ('/blog', {'GET': 'blog'}),
    ('/blog/<int:id>', {'GET': 'blog_detail'}),
    ('/login', {'POST': 'login'}),
    ('/register', {'POST': 'register'}),
    ('/logout', {'GET': 'logout'}),
    ('/profile', {'GET': 'profile'}),
    ('/profile/edit', {'GET': 'profile_edit', 'PUT': 'profile_edit'}),
    ('/profile/delete', {'DELETE': 'profile_delete'}),
    ('/profile/change-password', {'PUT': 'change_password'}),
]
""")
    
    # create config.py file
    with open("config.py", "w") as file:
        file.write(f"""
# Flask configuration
FLASK_SECRET_KEY = 'qantica_' +  {secrets.token_hex()}
FLASK_RUN_PORT = 8001
FLASK_RUN_HOST = ['0.0.0.0', 'localhost']
FLASK_DEBUG = True
FLASK_ENV = 'development'
FLASK_APP = 'qmd.py'

# database configuration
DATABASES = {{
    'default': {{
        'ENGINE': 'qantica.db.database.sqlite', # qantica.db.database.mysql, qantica.db.database.postgresql, qantica.db.database.mongodb, qantica.db.database.arangodb
        'NAME': '{foldername}',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': {PORT['sqlite']}
    }}
}}

""")
    
    # create .qanticarc.qt file
    with open(".qanticarc.qt", "w") as file:
        file.write("This is a Qantica project.")
    
    # create folder with the same name
    init_app(foldername)


def init_app(foldername):
    # verify if folder is a Qantica project
    if not os.path.exists('.qanticarc.qt'):
        print("""
        ================================================
            Your folder does not a Qantica project
        ================================================
        """)
        return
    
    # verify if the folder exists
    if os.path.exists(foldername):
        print("""
        ========================================
              Folder already exists
        ========================================
              """
        )
        return
    
    foldername = foldername.lower()
     
    # create the folder
    os.mkdir(foldername)
    os.chdir(foldername)
    
    # create __init__.py file
    with open("__init__.py", "w") as file:
        file.write("")
    
    # create models.py file
    with open("models.py", "w") as file:
        file.write("""
from qantica.db import models


class User(models.Model):

    username = models.CharField(max_length=100)
    email = models.EmailField()
""")
    
    # create views.py file
    with open("views.py", "w") as file:
        file.write("""
from qantica import Response
from qantica import request, redirect
from qantica import status


def index():
    return Response(message='Welcome to Qantica', data={}, status=status.HTTP_200_OK)
""")
    
    # create test.py file
    with open("tests.py", "w") as file:
        file.write("from django.test import TestCase\n\n\n\n")


def main():
    # usage: qant create <foldername>
    if len(sys.argv) != 3:
        print("""
            1. Usage: qant create <projectname>
            2. Usage: qant create-app <appname>
        """)
        return
    
    action = sys.argv[1]
    foldername = sys.argv[2]
    
    if action == "create":
        init(foldername)
    elif action == "create-app":
        init_app(foldername)


if __name__ == "__main__":
    main()

# {'3306' if DATABASE_LABEL == 'mysql' else '5432' if DATABASE_LABEL == 'postgresql' else '27017' if DATABASE_LABEL == 'mongodb' else '8529' if DATABASE_LABEL == 'arangodb' else '',}
